  
  npm install firebaseui
  
  -----------LOGIN
  
  async login() {
    if (this.loginForm.valid) {
      const { email, password } = this.loginForm.value;
      this.isLoading = true;
      try {
        const userCredential = await signInWithEmailAndPassword(this.auth, email, password);
        const user = userCredential.user;
        this.loginFailed = false;
        this.loginForm.reset();
        this.router.navigate(['/dashboard']);
      } catch (error: any) {
        console.error('Error logging in', error);
        this.isLoading = false;
        this.loginFailed = true;
      }
    }
  }

-----------REGISTER

    async register() {
    if (this.registerForm.valid && this.disableSelect.value) {
      const email = this.registerForm.value.email.trim();
      const password = this.registerForm.value.password;

      if (!this.registerForm.controls['email'].valid) {
        console.error('Invalid email format');
        return;
      }

      this.isLoading = true;

      try {
        const userCredential = await createUserWithEmailAndPassword(this.auth, email, password);
        console.log('User Registered:', userCredential.user);
        this.isLoading = false;
        await this.auth.signOut();
        this.router.navigate(['/login']);
      } catch (error) {
        console.error('Error registering user:', error);
        this.isLoading = false;
        this.registerFailed = true;
      }
    } else {
      console.log('Form is invalid or checkbox not checked');
    }
  }

---------Beobachter fÃ¼r den Authentifizierungsstatus

import { Auth, onAuthStateChanged, signOut } from '@angular/fire/auth';

  constructor(private router: Router, private auth: Auth) {
    onAuthStateChanged(this.auth, (user) => {
      if (user) {
        this.isLoggedIn = true;
      } else {
        this.isLoggedIn = false;
        this.router.navigate(['/login']);
      }
    });
  }

 -----------SIGNOUT
logout() {
    signOut(this.auth).then(() => {
      this.isLoggedIn = false;
      this.router.navigate(['/login']);
    }).catch((error) => {
      console.error('Logout failed:', error);
    });
  }
